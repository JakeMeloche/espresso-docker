name: Build, Test, Scan, and Push Alpine Docker Image

on:
  push:
  pull_request:

jobs:
  build-test-scan-push:
    runs-on: ubuntu-latest
    env:
      IMAGE_NAME: espresso-alpine
      DOCKERFILE: docker/Dockerfile-alpine
      REGISTRY: docker.io
      REPO: ${{ secrets.DOCKERHUB_USERNAME }}/espresso-alpine
      TAG: ${{ github.sha }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up QEMU (for multi-arch, optional)
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ${{ env.DOCKERFILE }}
          push: false
          load: true
          tags: ${{ env.REPO }}:${{ env.TAG }}

      - name: Debug: Check Python and NumPy in image
        run: |
          docker run --rm -e BOOST_ROOT=/home/espresso/boost_1_84_0 -e LD_LIBRARY_PATH=/home/espresso/boost_1_84_0/stage/lib -w /home/espresso \
            ${{ env.REPO }}:${{ env.TAG }} \
            sh -c 'python3 --version && python3 -c "import numpy; print(numpy.__file__)"'

      - name: Test image (clone, cmake, make, make check)
        run: |
          docker run --rm -e BOOST_ROOT=/home/espresso/boost_1_84_0 -e LD_LIBRARY_PATH=/home/espresso/boost_1_84_0/stage/lib -w /home/espresso \
            ${{ env.REPO }}:${{ env.TAG }} \
            sh -c '
              git clone https://github.com/espressomd/espresso.git && \
              cd espresso && \
              mkdir build && cd build && \
              cmake .. \
                -DBOOST_ROOT=$BOOST_ROOT \
                -DBoost_NO_SYSTEM_PATHS=ON \
                -DBoost_LIBRARY_DIRS=$BOOST_ROOT/stage/lib \
                -DBoost_INCLUDE_DIRS=$BOOST_ROOT \
                -DBoost_USE_STATIC_LIBS=OFF \
                -DBoost_USE_MULTITHREADED=ON \
                -DBoost_USE_STATIC_RUNTIME=OFF \
                -DPython_EXECUTABLE=/usr/bin/python3 && \
              make -j$(nproc) && \
              make check
            '

      - name: Install Trivy
        run: |
          wget -qO- https://github.com/aquasecurity/trivy/releases/latest/download/trivy_$(uname -s)_$(uname -m).tar.gz | tar zxvf -
          sudo mv trivy /usr/local/bin/

      - name: Scan image with Trivy
        run: |
          trivy image --scanners vuln --table-mode summary --exit-code 1 --ignore-unfixed ${{ env.REPO }}:${{ env.TAG }}

      - name: Generate SBOM
        run: |
          docker sbom ${{ env.REPO }}:${{ env.TAG }} > sbom.spdx || true

      - name: Push image to Docker Hub
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ${{ env.DOCKERFILE }}
          push: true
          tags: ${{ env.REPO }}:${{ env.TAG }}

      - name: Upload SBOM as artifact
        uses: actions/upload-artifact@v4
        with:
          name: sbom
          path: sbom.spdx 