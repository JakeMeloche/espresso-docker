image: docker:latest

stages:
  - build
  - test
  - status

.build_template: &build_definition
  stage: build
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker pull $CI_REGISTRY/$CI_PROJECT_PATH/$CI_JOB_NAME || true
  script:
    - cd docker/${CI_JOB_NAME%:*}
    - echo "ACTIVATION_LICENSE_FILE=$INTEL_LICENSE_SERVER" >> intel.cfg
    - test -f Dockerfile-${CI_JOB_NAME#*:} || ./generate.sh ${CI_JOB_NAME#*:}
    - docker build -f Dockerfile-${CI_JOB_NAME#*:}* --pull -t $CI_REGISTRY/$CI_PROJECT_PATH/test/$CI_JOB_NAME-$CI_COMMIT_SHA --cache-from $CI_REGISTRY/$CI_PROJECT_PATH/$CI_JOB_NAME .
    - docker push $CI_REGISTRY/$CI_PROJECT_PATH/test/$CI_JOB_NAME-$CI_COMMIT_SHA
    - test "$CI_COMMIT_REF_NAME" != "master" || docker tag $CI_REGISTRY/$CI_PROJECT_PATH/test/$CI_JOB_NAME-$CI_COMMIT_SHA $CI_REGISTRY/$CI_PROJECT_PATH/$CI_JOB_NAME
    - test "$CI_COMMIT_REF_NAME" != "master" || docker push $CI_REGISTRY/$CI_PROJECT_PATH/$CI_JOB_NAME
  tags:
    - docker-docker
    - linux

.test_template: &test_definition
  stage: test
  image: $CI_REGISTRY/$CI_PROJECT_PATH/$CI_JOB_NAME-$CI_COMMIT_SHA
  script:
    - git clone --recursive https://github.com/espressomd/espresso
    - cd espresso
    - maintainer/CI/build_cmake.sh
  variables:
    make_check: "false"
    myconfig: "maxset"
  tags:
    - docker
    - linux

.test_py3_template: &test_py3_definition
  <<: *test_definition
  variables:
    make_check: "false"
    myconfig: "maxset"
    python_version: "3"

centos:7:
  <<: *build_definition
centos:next:
  <<: *build_definition
debian:9:
  <<: *build_definition
opensuse:42.3:
  <<: *build_definition
opensuse:15.0:
  <<: *build_definition
ubuntu:16.04:
  <<: *build_definition
ubuntu:summerschool:
  <<: *build_definition
ubuntu:18.04:
  <<: *build_definition
ubuntu:wo-dependencies:
  <<: *build_definition
clang:6.0:
  <<: *build_definition
cuda:8.0:
  <<: *build_definition
cuda:9.0:
  <<: *build_definition
rocm:latest:
  <<: *build_definition
intel:15:
  <<: *build_definition
intel:17:
  <<: *build_definition
ubuntu-python3:16.04:
  <<: *build_definition
ubuntu-python3:18.04:
  <<: *build_definition
ubuntu:arm64:
  <<: *build_definition
ubuntu:armhf:
  <<: *build_definition
ubuntu:i386:
  <<: *build_definition
ubuntu:ppc64le:
  <<: *build_definition
ubuntu:s390x:
  <<: *build_definition

test/centos:7:
  <<: *test_definition
test/centos:next:
  <<: *test_definition
test/debian:9:
  <<: *test_definition
test/opensuse:42.3:
  <<: *test_definition
test/opensuse:15.0:
  <<: *test_definition
test/ubuntu:16.04:
  <<: *test_definition
test/ubuntu:18.04:
  <<: *test_definition
test/clang:6.0:
  <<: *test_definition
test/cuda:8.0:
  <<: *test_definition
test/cuda:9.0:
  <<: *test_py3_definition
test/rocm:latest:
  <<: *test_definition
  variables:
    make_check: "false"
    myconfig: "maxset"
    HIP_PLATFORM: "hcc"
    HCC_AMDGPU_TARGET: "gfx900"
test/intel:15:
  <<: *test_definition
test/intel:17:
  <<: *test_definition
test/ubuntu-python3:16.04:
  <<: *test_py3_definition
test/ubuntu-python3:18.04:
  <<: *test_py3_definition

status_success:
  stage: status
  image: $CI_REGISTRY/espressomd/docker/ubuntu:18.04
  script: bash maintainer/gh_post_status.sh success
  when: on_success
  tags:
    - linux

status_failure:
  stage: status
  image: $CI_REGISTRY/espressomd/docker/ubuntu:18.04
  script: bash maintainer/gh_post_status.sh failure
  when: on_failure
  tags:
    - linux

